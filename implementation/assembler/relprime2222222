lli x15, 32
lui x1, 20
add x15, x15, x1
lw x1, x15, 0 //x15 is special mem address, x1 is n (input)
//store output in x2
//x1, x15 are off limits to use
RELPRIME: addi x3, x0, 2 //x3 = m
lli x4, GCD
lli x8, ENDWHILE
lli x10, STARTWHILE
STARTWHILE: jalr x5, x4, 0 // return address in x5, return value in x6
addi x7, x0, 1 //x7 = 1
bne x6, x7, x8
//start of while loop
addi x3, x3, 1
jalr x0, x10, 0
ENDWHILE: lli x9, ENDALL
jalr x0, x9


GCD: // return in x6
//a = x11, b = x12
add x11, x0, x1
add x12, x0, x3
lli x13, STARTWHILE2
bne x0, x11, x13
add x6, x0, x12
jalr x0, x5, x0

lli x14, CONTINUEWHILE
STARTWHILE2: bne x12, x0, x14
add x6, x0, x11
jalr x0, x5, x0

CONTINUEWHILE:

//if a > b stuff, can use x14 and x7
grt x14, x11, x12
lli x7, ELSE
beq x14, x0, x7
sub x11, x11, x12
jalr x0, x13, x0

ELSE: sub x12, x12, x11
jalr x0, x13, x0

jalr x0, x5, x0



ENDALL: sw x2, x15, 0